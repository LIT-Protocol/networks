[
  {
    "inputs": [
      {
        "internalType": "bytes4",
        "name": "_selector",
        "type": "bytes4"
      }
    ],
    "name": "CannotAddFunctionToDiamondThatAlreadyExists",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes4[]",
        "name": "_selectors",
        "type": "bytes4[]"
      }
    ],
    "name": "CannotAddSelectorsToZeroAddress",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes4",
        "name": "_selector",
        "type": "bytes4"
      }
    ],
    "name": "CannotRemoveFunctionThatDoesNotExist",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes4",
        "name": "_selector",
        "type": "bytes4"
      }
    ],
    "name": "CannotRemoveImmutableFunction",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes4",
        "name": "_selector",
        "type": "bytes4"
      }
    ],
    "name": "CannotReplaceFunctionThatDoesNotExists",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes4",
        "name": "_selector",
        "type": "bytes4"
      }
    ],
    "name": "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes4[]",
        "name": "_selectors",
        "type": "bytes4[]"
      }
    ],
    "name": "CannotReplaceFunctionsFromFacetWithZeroAddress",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes4",
        "name": "_selector",
        "type": "bytes4"
      }
    ],
    "name": "CannotReplaceImmutableFunction",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint8",
        "name": "_action",
        "type": "uint8"
      }
    ],
    "name": "IncorrectFacetCutAction",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_initializationContractAddress",
        "type": "address"
      },
      {
        "internalType": "bytes",
        "name": "_calldata",
        "type": "bytes"
      }
    ],
    "name": "InitializationFunctionReverted",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_contractAddress",
        "type": "address"
      },
      {
        "internalType": "string",
        "name": "_message",
        "type": "string"
      }
    ],
    "name": "NoBytecodeAtAddress",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_facetAddress",
        "type": "address"
      }
    ],
    "name": "NoSelectorsProvidedForFacetForCut",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_user",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_contractOwner",
        "type": "address"
      }
    ],
    "name": "NotContractOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_facetAddress",
        "type": "address"
      }
    ],
    "name": "RemoveFacetAddressMustBeZeroAddress",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "facetAddress",
            "type": "address"
          },
          {
            "internalType": "enum IDiamond.FacetCutAction",
            "name": "action",
            "type": "uint8"
          },
          {
            "internalType": "bytes4[]",
            "name": "functionSelectors",
            "type": "bytes4[]"
          }
        ],
        "indexed": false,
        "internalType": "struct IDiamond.FacetCut[]",
        "name": "_diamondCut",
        "type": "tuple[]"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "_init",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "bytes",
        "name": "_calldata",
        "type": "bytes"
      }
    ],
    "name": "DiamondCut",
    "type": "event"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "facetAddress",
            "type": "address"
          },
          {
            "internalType": "enum IDiamond.FacetCutAction",
            "name": "action",
            "type": "uint8"
          },
          {
            "internalType": "bytes4[]",
            "name": "functionSelectors",
            "type": "bytes4[]"
          }
        ],
        "internalType": "struct IDiamond.FacetCut[]",
        "name": "_diamondCut",
        "type": "tuple[]"
      },
      {
        "internalType": "address",
        "name": "_init",
        "type": "address"
      },
      {
        "internalType": "bytes",
        "name": "_calldata",
        "type": "bytes"
      }
    ],
    "name": "diamondCut",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes4",
        "name": "_functionSelector",
        "type": "bytes4"
      }
    ],
    "name": "facetAddress",
    "outputs": [
      {
        "internalType": "address",
        "name": "facetAddress_",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "facetAddresses",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "facetAddresses_",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_facet",
        "type": "address"
      }
    ],
    "name": "facetFunctionSelectors",
    "outputs": [
      {
        "internalType": "bytes4[]",
        "name": "_facetFunctionSelectors",
        "type": "bytes4[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "facets",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "facetAddress",
            "type": "address"
          },
          {
            "internalType": "bytes4[]",
            "name": "functionSelectors",
            "type": "bytes4[]"
          }
        ],
        "internalType": "struct IDiamondLoupe.Facet[]",
        "name": "facets_",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes4",
        "name": "_interfaceId",
        "type": "bytes4"
      }
    ],
    "name": "supportsInterface",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "owner_",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "RealmIdNotFound",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "getAllUnkickedValidators",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "getCurrentRealmIdForStakerAddress",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "getRealmIdForStakerAddress",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "getShawdowRealmIdForStakerAddress",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getUnassignedStakerAddresses",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getUnassignedValidators",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint32",
            "name": "ip",
            "type": "uint32"
          },
          {
            "internalType": "uint128",
            "name": "ipv6",
            "type": "uint128"
          },
          {
            "internalType": "uint32",
            "name": "port",
            "type": "uint32"
          },
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "reward",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "senderPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "receiverPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastActiveEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "commissionRate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRealmId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeWeight",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedFixedCostRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedCommission",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "operatorAddress",
            "type": "address"
          }
        ],
        "internalType": "struct LibStakingStorage.Validator[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nodeAddress",
        "type": "address"
      }
    ],
    "name": "isRecentValidator",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "isValidatorInCurrentEpoch",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "isValidatorInCurrentOrNextEpoch",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "isValidatorInNextEpoch",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nodeAddress",
        "type": "address"
      }
    ],
    "name": "nodeAddressToStakerAddressAcrossRealms",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "numRealms",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "validator_by_staker_address",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint32",
            "name": "ip",
            "type": "uint32"
          },
          {
            "internalType": "uint128",
            "name": "ipv6",
            "type": "uint128"
          },
          {
            "internalType": "uint32",
            "name": "port",
            "type": "uint32"
          },
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "reward",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "senderPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "receiverPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastActiveEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "commissionRate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRealmId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeWeight",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedFixedCostRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedCommission",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "operatorAddress",
            "type": "address"
          }
        ],
        "internalType": "struct LibStakingStorage.Validator",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "CallerNotOwner",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "CallerNotOwnerOrDevopsAdmin",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "CannotStakeZero",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidNewSharePrice",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidSlashPercentage",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "enum LibStakingStorage.States",
        "name": "state",
        "type": "uint8"
      }
    ],
    "name": "MustBeInNextValidatorSetLockedOrReadyForNextEpochState",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "validator",
        "type": "address"
      },
      {
        "internalType": "address[]",
        "name": "validatorsInNextEpoch",
        "type": "address[]"
      }
    ],
    "name": "ValidatorIsNotInNextEpoch",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "dataType",
        "type": "uint256"
      }
    ],
    "name": "ClearOfflinePhaseData",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "reason",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "tolerance",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "intervalSecs",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "kickPenaltyPercent",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "kickPenaltyDemerits",
            "type": "uint256"
          }
        ],
        "indexed": false,
        "internalType": "struct LibStakingStorage.ComplaintConfig",
        "name": "config",
        "type": "tuple"
      }
    ],
    "name": "ComplaintConfigSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "tokenRewardPerTokenPerEpoch",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256[]",
        "name": "keyTypes",
        "type": "uint256[]"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "minimumValidatorCount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "rewardEpochDuration",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "maxTimeLock",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "minTimeLock",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "bmin",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "bmax",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "k",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "p",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "bool",
        "name": "enableStakeAutolock",
        "type": "bool"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "tokenPrice",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "profitMultiplier",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "usdCostPerMonth",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "maxEmissionRate",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "minStakeAmount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "maxStakeAmount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "minSelfStake",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "minSelfStakeTimelock",
        "type": "uint256"
      }
    ],
    "name": "ConfigSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "dataType",
        "type": "uint256"
      }
    ],
    "name": "CountOfflinePhaseData",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "newDevopsAdmin",
        "type": "address"
      }
    ],
    "name": "DevopsAdminSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newEpochEndTime",
        "type": "uint256"
      }
    ],
    "name": "EpochEndTimeSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newEpochLength",
        "type": "uint256"
      }
    ],
    "name": "EpochLengthSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newEpochTimeout",
        "type": "uint256"
      }
    ],
    "name": "EpochTimeoutSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "reason",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newKickPenaltyPercent",
        "type": "uint256"
      }
    ],
    "name": "KickPenaltyPercentSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newTokenRewardPerTokenPerEpoch",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256[]",
        "name": "newKeyTypes",
        "type": "uint256[]"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newMinimumValidatorCount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newMaxConcurrentRequests",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newMaxPresignCount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newMinPresignCount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newPeerCheckingIntervalSecs",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newMaxPresignConcurrency",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "bool",
        "name": "newRpcHealthcheckEnabled",
        "type": "bool"
      }
    ],
    "name": "RealmConfigSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "newResolverContractAddress",
        "type": "address"
      }
    ],
    "name": "ResolverContractAddressSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "staker",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "Staked",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "newStakingTokenAddress",
        "type": "address"
      }
    ],
    "name": "StakingTokenSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "enum LibStakingStorage.States",
        "name": "newState",
        "type": "uint8"
      }
    ],
    "name": "StateChanged",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "staker",
        "type": "address"
      }
    ],
    "name": "ValidatorBanned",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "staker",
        "type": "address"
      }
    ],
    "name": "ValidatorKickedFromNextEpoch",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "staker",
        "type": "address"
      }
    ],
    "name": "ValidatorRejoinedNextEpoch",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "validator",
        "type": "address"
      }
    ],
    "name": "addPermittedValidator",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "addRealm",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "validatorStakerAddress",
        "type": "address"
      }
    ],
    "name": "adminKickValidatorInNextEpoch",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "adminRejoinValidator",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "adminResetEpoch",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address[]",
        "name": "validatorsForCurrentEpoch",
        "type": "address[]"
      }
    ],
    "name": "adminSetValidatorsInCurrentEpoch",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "source_realmId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "target_realmId",
        "type": "uint256"
      },
      {
        "internalType": "address[]",
        "name": "target_validators",
        "type": "address[]"
      }
    ],
    "name": "adminSetupShadowSplicing",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "percentage",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "adminSlashValidator",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "staker",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "timeLock",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "adminStakeForValidator",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "decreaseRewardPool",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "dataType",
        "type": "uint256"
      }
    ],
    "name": "emitClearOfflinePhaseData",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "dataType",
        "type": "uint256"
      }
    ],
    "name": "emitCountOfflinePhaseData",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "increaseRewardPool",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "validator",
        "type": "address"
      }
    ],
    "name": "removePermittedValidator",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "removeRealm",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "reason",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "tolerance",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "intervalSecs",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "kickPenaltyPercent",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "kickPenaltyDemerits",
            "type": "uint256"
          }
        ],
        "internalType": "struct LibStakingStorage.ComplaintConfig",
        "name": "config",
        "type": "tuple"
      }
    ],
    "name": "setComplaintConfig",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "tokenRewardPerTokenPerEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256[]",
            "name": "keyTypes",
            "type": "uint256[]"
          },
          {
            "internalType": "uint256",
            "name": "minimumValidatorCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "rewardEpochDuration",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxTimeLock",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minTimeLock",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "bmin",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "bmax",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "k",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "p",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "enableStakeAutolock",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "tokenPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "profitMultiplier",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "usdCostPerMonth",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxEmissionRate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minStakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxStakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minSelfStake",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minSelfStakeTimelock",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minValidatorCountToClampMinimumThreshold",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minThresholdToClampAt",
            "type": "uint256"
          }
        ],
        "internalType": "struct LibStakingStorage.GlobalConfig",
        "name": "newConfig",
        "type": "tuple"
      }
    ],
    "name": "setConfig",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newResolverAddress",
        "type": "address"
      }
    ],
    "name": "setContractResolver",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "newThreshold",
        "type": "uint256"
      }
    ],
    "name": "setDemeritRejoinThreshold",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newDevopsAdmin",
        "type": "address"
      }
    ],
    "name": "setDevopsAdmin",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "newEpochEndTime",
        "type": "uint256"
      }
    ],
    "name": "setEpochEndTime",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "newEpochLength",
        "type": "uint256"
      }
    ],
    "name": "setEpochLength",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "enum LibStakingStorage.States",
        "name": "newState",
        "type": "uint8"
      }
    ],
    "name": "setEpochState",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "newEpochTimeout",
        "type": "uint256"
      }
    ],
    "name": "setEpochTimeout",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "reason",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "newKickPenaltyPercent",
        "type": "uint256"
      }
    ],
    "name": "setKickPenaltyPercent",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "newTimeout",
        "type": "uint256"
      }
    ],
    "name": "setPendingRejoinTimeout",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "permittedValidatorsOn",
        "type": "bool"
      }
    ],
    "name": "setPermittedValidatorsOn",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "maxConcurrentRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxPresignCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minPresignCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "peerCheckingIntervalSecs",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxPresignConcurrency",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "rpcHealthcheckEnabled",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "minEpochForRewards",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "permittedValidatorsOn",
            "type": "bool"
          }
        ],
        "internalType": "struct LibStakingStorage.RealmConfig",
        "name": "newConfig",
        "type": "tuple"
      }
    ],
    "name": "setRealmConfig",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "newTotalSupply",
        "type": "uint256"
      }
    ],
    "name": "setTokenTotalSupplyStandIn",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "CallerNotContract",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "CannotMigrateFromValidator",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "CannotModifyUnfrozen",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "CannotWithdrawFrozen",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "checkpoint",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "currentEpoch",
        "type": "uint256"
      }
    ],
    "name": "CheckpointAheadOfCurrentEpoch",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "InsufficientSelfStake",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidRatio",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "timeLock",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "minTimeLock",
        "type": "uint256"
      }
    ],
    "name": "MinTimeLockNotMet",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NewTimeLockMustBeGreaterThanCurrent",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NoEmptyStakingSlot",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "RewardsMustBeClaimed",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "slahedAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "slashedRealmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "senderAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "senderRealmId",
        "type": "uint256"
      }
    ],
    "name": "SlashingMustOccurInSameRealm",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "StakeAmountNotMet",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "stakedAmount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "minimumStake",
        "type": "uint256"
      }
    ],
    "name": "StakeMustBeGreaterThanMinimumStake",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "stakeRecordId",
        "type": "uint256"
      }
    ],
    "name": "StakeRecordNotFound",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "TimeLockNotMet",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "TooSoonToWithdraw",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "validatorAddress",
        "type": "address"
      }
    ],
    "name": "ValidatorNotRegistered",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "rewards",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "fromEpoch",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "toEpoch",
        "type": "uint256"
      }
    ],
    "name": "FixedCostRewardsClaimed",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "recordId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "stakerAddressClient",
        "type": "address"
      }
    ],
    "name": "StakeRecordCreated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "userStakerAddress",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "recordId",
        "type": "uint256"
      }
    ],
    "name": "StakeRecordRemoved",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "recordId",
        "type": "uint256"
      }
    ],
    "name": "StakeRecordUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "recordId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "rewards",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "fromEpoch",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "toEpoch",
        "type": "uint256"
      }
    ],
    "name": "StakeRewardsClaimed",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "newTrustedForwarder",
        "type": "address"
      }
    ],
    "name": "TrustedForwarderSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "rewards",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "fromEpoch",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "toEpoch",
        "type": "uint256"
      }
    ],
    "name": "ValidatorCommissionClaimed",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "ValidatorRegistered",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "staker",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "Withdrawn",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "balanceOf",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "checkStakingAmounts",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "maxNumberOfEpochsToClaim",
        "type": "uint256"
      }
    ],
    "name": "claimFixedCostRewards",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "stakeRecordId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "maxNumberOfEpochsToClaim",
        "type": "uint256"
      }
    ],
    "name": "claimStakeRewards",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "maxNumberOfEpochsToClaim",
        "type": "uint256"
      }
    ],
    "name": "claimValidatorCommission",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getMaximumStake",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getMinimumSelfStake",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getMinimumStake",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "rewardEpochNumber",
        "type": "uint256"
      }
    ],
    "name": "getRewardEpoch",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "epochEnd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalStakeWeight",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalStakeRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "validatorFixedCostRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "validatorCommission",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "slope",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "slopeIncrease",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "validatorSharePrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "stakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "validatorSharePriceAtLastUpdate",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "initial",
            "type": "bool"
          }
        ],
        "internalType": "struct LibStakingStorage.RewardEpoch",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "rewardEpochNumber",
        "type": "uint256"
      }
    ],
    "name": "getRewardEpochView",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "epochEnd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalStakeWeight",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalStakeRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "validatorFixedCostRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "validatorCommission",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "slope",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "slopeIncrease",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "validatorSharePrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "stakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "validatorSharePriceAtLastUpdate",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "initial",
            "type": "bool"
          }
        ],
        "internalType": "struct LibStakingStorage.RewardEpoch",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getTrustedForwarder",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "stakeRecordId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "additionalAmount",
        "type": "uint256"
      }
    ],
    "name": "increaseStakeRecordAmount",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "stakeRecordId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "additionalTimeLock",
        "type": "uint256"
      }
    ],
    "name": "increaseStakeRecordTimelock",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "rewardEpochNumber",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "isInitial",
        "type": "bool"
      }
    ],
    "name": "initializeRewardEpoch",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "operatorAddressToMigrateFrom",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "stakeRecordId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "operatorAddressToMigrateTo",
        "type": "address"
      }
    ],
    "name": "migrateStakeRecord",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "forwarder",
        "type": "address"
      }
    ],
    "name": "setTrustedForwarder",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "rate",
        "type": "uint256"
      }
    ],
    "name": "setValidatorCommissionRate",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "stakeRecordId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "ratio",
        "type": "uint256"
      }
    ],
    "name": "splitStakeRecord",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "timeLock",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "operatorStakerAddress",
        "type": "address"
      }
    ],
    "name": "stake",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "stakeId",
        "type": "uint256"
      }
    ],
    "name": "unfreezeStake",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "stakeRecordId",
        "type": "uint256"
      }
    ],
    "name": "withdraw",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "ActiveValidatorsCannotLeave",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "CannotKickBelowCurrentValidatorThreshold",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakingAddress",
        "type": "address"
      }
    ],
    "name": "CannotRejoinBecauseBanned",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakingAddress",
        "type": "address"
      }
    ],
    "name": "CannotRejoinUntilNextEpochBecauseKicked",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "senderPubKey",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "receiverPubKey",
        "type": "uint256"
      }
    ],
    "name": "CannotReuseCommsKeys",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "CannotVoteTwice",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "CannotWithdrawZero",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nodeAddress",
        "type": "address"
      }
    ],
    "name": "CouldNotMapNodeAddressToStakerAddress",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidAttestedAddress",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "enum LibStakingStorage.States",
        "name": "state",
        "type": "uint8"
      }
    ],
    "name": "MustBeInActiveOrUnlockedOrPausedState",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "enum LibStakingStorage.States",
        "name": "state",
        "type": "uint8"
      }
    ],
    "name": "MustBeInActiveOrUnlockedState",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "enum LibStakingStorage.States",
        "name": "state",
        "type": "uint8"
      }
    ],
    "name": "MustBeInNextValidatorSetLockedOrReadyForNextEpochOrRestoreState",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "enum LibStakingStorage.States",
        "name": "state",
        "type": "uint8"
      }
    ],
    "name": "MustBeInNextValidatorSetLockedState",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "enum LibStakingStorage.States",
        "name": "state",
        "type": "uint8"
      }
    ],
    "name": "MustBeInReadyForNextEpochState",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "MustBeValidatorInNextEpochToKick",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "currentTimestamp",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "epochEndTime",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "timeout",
        "type": "uint256"
      }
    ],
    "name": "NotEnoughTimeElapsedForTimeoutSinceLastEpoch",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "currentTimestamp",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "epochEndTime",
        "type": "uint256"
      }
    ],
    "name": "NotEnoughTimeElapsedSinceLastEpoch",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "validatorCount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "minimumValidatorCount",
        "type": "uint256"
      }
    ],
    "name": "NotEnoughValidatorsInNextEpoch",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "currentReadyValidatorCount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "nextReadyValidatorCount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "minimumValidatorCountToBeReady",
        "type": "uint256"
      }
    ],
    "name": "NotEnoughValidatorsReadyForNextEpoch",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "currentEpochNumber",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "receivedEpochNumber",
        "type": "uint256"
      }
    ],
    "name": "SignaledReadyForWrongEpochNumber",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "StakerAddressMismatch",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "yourBalance",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "requestedWithdrawlAmount",
        "type": "uint256"
      }
    ],
    "name": "TryingToWithdrawMoreThanStaked",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "staker",
        "type": "address"
      }
    ],
    "name": "ValidatorAlreadyInNextValidatorSet",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "staker",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "existingRealmId",
        "type": "uint256"
      }
    ],
    "name": "ValidatorAlreadyInRealm",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "staker",
        "type": "address"
      }
    ],
    "name": "ValidatorNotInNextEpoch",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "validatorAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "ValidatorNotPermitted",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "valueName",
        "type": "string"
      }
    ],
    "name": "ValueMustBeNonzero",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "epochNumber",
        "type": "uint256"
      }
    ],
    "name": "AdvancedEpoch",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "staker",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "attestedAddress",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "attestedPubKey",
        "type": "uint256"
      }
    ],
    "name": "AttestedWalletRegistered",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newTokenRewardPerTokenPerEpoch",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256[]",
        "name": "newKeyTypes",
        "type": "uint256[]"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newMinimumValidatorCount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newMaxConcurrentRequests",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newMaxPresignCount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newMinPresignCount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newPeerCheckingIntervalSecs",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newMaxPresignConcurrency",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "bool",
        "name": "newRpcHealthcheckEnabled",
        "type": "bool"
      }
    ],
    "name": "ConfigSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "string",
        "name": "message",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "sender",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "DebugEvent",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "staker",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "epochNumber",
        "type": "uint256"
      }
    ],
    "name": "ReadyForNextEpoch",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "Recovered",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "staker",
        "type": "address"
      }
    ],
    "name": "RequestToJoin",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "staker",
        "type": "address"
      }
    ],
    "name": "RequestToLeave",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newDuration",
        "type": "uint256"
      }
    ],
    "name": "RewardsDurationUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "reporter",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "validatorToKickStakerAddress",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "reason",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      }
    ],
    "name": "VotedToKickValidatorInNextEpoch",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "advanceEpoch",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "enum LibStakingStorage.States",
        "name": "state",
        "type": "uint8"
      }
    ],
    "name": "checkActiveOrUnlockedOrPausedState",
    "outputs": [],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "exit",
    "outputs": [],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "validatorToKickStakerAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "reason",
        "type": "uint256"
      },
      {
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      }
    ],
    "name": "kickValidatorInNextEpoch",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "lockValidatorsForNextEpoch",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "attestedAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "attestedPubKey",
        "type": "uint256"
      }
    ],
    "name": "registerAttestedWallet",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "requestToJoin",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "requestToJoinAsAdmin",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "requestToJoinAsForShadowSplicing",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "requestToJoinAsNode",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "requestToLeave",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "requestToLeaveAsNode",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint32",
        "name": "ip",
        "type": "uint32"
      },
      {
        "internalType": "uint128",
        "name": "ipv6",
        "type": "uint128"
      },
      {
        "internalType": "uint32",
        "name": "port",
        "type": "uint32"
      },
      {
        "internalType": "address",
        "name": "operatorAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "senderPubKey",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "receiverPubKey",
        "type": "uint256"
      }
    ],
    "name": "setIpPortNodeAddressAndCommunicationPubKeys",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "epochNumber",
        "type": "uint256"
      }
    ],
    "name": "signalReadyForNextEpoch",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "index",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "major",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minor",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "patch",
            "type": "uint256"
          }
        ],
        "indexed": false,
        "internalType": "struct LibStakingStorage.Version",
        "name": "version",
        "type": "tuple"
      }
    ],
    "name": "VersionRequirementsUpdated",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "major",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minor",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "patch",
            "type": "uint256"
          }
        ],
        "internalType": "struct LibStakingStorage.Version",
        "name": "version",
        "type": "tuple"
      }
    ],
    "name": "checkVersion",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getMaxVersion",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "major",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minor",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "patch",
            "type": "uint256"
          }
        ],
        "internalType": "struct LibStakingStorage.Version",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getMaxVersionString",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getMinVersion",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "major",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minor",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "patch",
            "type": "uint256"
          }
        ],
        "internalType": "struct LibStakingStorage.Version",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getMinVersionString",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "major",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minor",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "patch",
            "type": "uint256"
          }
        ],
        "internalType": "struct LibStakingStorage.Version",
        "name": "version",
        "type": "tuple"
      }
    ],
    "name": "setMaxVersion",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "major",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minor",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "patch",
            "type": "uint256"
          }
        ],
        "internalType": "struct LibStakingStorage.Version",
        "name": "version",
        "type": "tuple"
      }
    ],
    "name": "setMinVersion",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "InvalidTimeLock",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NodeAddressNotFoundForStaker",
    "type": "error"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "stakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "stakeWeight",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "validatorsInCurrentEpoch",
            "type": "address[]"
          },
          {
            "internalType": "uint256",
            "name": "actualEpochLength",
            "type": "uint256"
          }
        ],
        "internalType": "struct LibStakingStorage.RewardEpochGlobalStats",
        "name": "globalStats",
        "type": "tuple"
      }
    ],
    "name": "calculateRewardsPerDay",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "timeLock",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "calculateStakeWeight",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "reason",
        "type": "uint256"
      }
    ],
    "name": "complaintConfig",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "tolerance",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "intervalSecs",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "kickPenaltyPercent",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "kickPenaltyDemerits",
            "type": "uint256"
          }
        ],
        "internalType": "struct LibStakingStorage.ComplaintConfig",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "contractResolver",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "countOfCurrentValidatorsReadyForNextEpoch",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "countOfNextValidatorsReadyForNextEpoch",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "currentValidatorCountForConsensus",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "epoch",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "epochLength",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "number",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "rewardEpochNumber",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "nextRewardEpochNumber",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "endTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "retries",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeout",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "startTime",
            "type": "uint256"
          }
        ],
        "internalType": "struct LibStakingStorage.Epoch",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getActiveUnkickedValidatorCount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getActiveUnkickedValidatorStructs",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint32",
            "name": "ip",
            "type": "uint32"
          },
          {
            "internalType": "uint128",
            "name": "ipv6",
            "type": "uint128"
          },
          {
            "internalType": "uint32",
            "name": "port",
            "type": "uint32"
          },
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "reward",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "senderPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "receiverPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastActiveEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "commissionRate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRealmId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeWeight",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedFixedCostRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedCommission",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "operatorAddress",
            "type": "address"
          }
        ],
        "internalType": "struct LibStakingStorage.Validator[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getActiveUnkickedValidatorStructsAndCounts",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "epochLength",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "number",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "rewardEpochNumber",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "nextRewardEpochNumber",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "endTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "retries",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeout",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "startTime",
            "type": "uint256"
          }
        ],
        "internalType": "struct LibStakingStorage.Epoch",
        "name": "",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint32",
            "name": "ip",
            "type": "uint32"
          },
          {
            "internalType": "uint128",
            "name": "ipv6",
            "type": "uint128"
          },
          {
            "internalType": "uint32",
            "name": "port",
            "type": "uint32"
          },
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "reward",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "senderPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "receiverPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastActiveEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "commissionRate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRealmId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeWeight",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedFixedCostRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedCommission",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "operatorAddress",
            "type": "address"
          }
        ],
        "internalType": "struct LibStakingStorage.Validator[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getActiveUnkickedValidators",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getAllReserveValidators",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getAllValidators",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getKeyTypes",
    "outputs": [
      {
        "internalType": "uint256[]",
        "name": "",
        "type": "uint256[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getKickedValidators",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "getLastStakeRecord",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "unfreezeStart",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeLock",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastUpdateTimestamp",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimed",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "initialSharePrice",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "loaded",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "frozen",
            "type": "bool"
          },
          {
            "internalType": "address",
            "name": "attributionAddress",
            "type": "address"
          }
        ],
        "internalType": "struct LibStakingStorage.StakeRecord",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getLitCirc",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getLowestRewardEpochNumber",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address[]",
        "name": "addresses",
        "type": "address[]"
      }
    ],
    "name": "getNodeAttestedPubKeyMappings",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "pubKey",
            "type": "uint256"
          }
        ],
        "internalType": "struct LibStakingStorage.PubKeyMapping[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "getNodeDemerits",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address[]",
        "name": "addresses",
        "type": "address[]"
      }
    ],
    "name": "getNodeStakerAddressMappings",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "stakerAddress",
            "type": "address"
          }
        ],
        "internalType": "struct LibStakingStorage.AddressMapping[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getNonShadowValidators",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "epochNumber",
        "type": "uint256"
      }
    ],
    "name": "getRewardEpochGlobalStats",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "stakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "stakeWeight",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "validatorsInCurrentEpoch",
            "type": "address[]"
          },
          {
            "internalType": "uint256",
            "name": "actualEpochLength",
            "type": "uint256"
          }
        ],
        "internalType": "struct LibStakingStorage.RewardEpochGlobalStats",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getRewardEpochNumber",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getShadowValidators",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "recordId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "userStakerAddress",
        "type": "address"
      }
    ],
    "name": "getStakeRecord",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "unfreezeStart",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeLock",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastUpdateTimestamp",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimed",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "initialSharePrice",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "loaded",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "frozen",
            "type": "bool"
          },
          {
            "internalType": "address",
            "name": "attributionAddress",
            "type": "address"
          }
        ],
        "internalType": "struct LibStakingStorage.StakeRecord",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "getStakeRecordCount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "getStakeRecordsForValidator",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "unfreezeStart",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeLock",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastUpdateTimestamp",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimed",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "initialSharePrice",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "loaded",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "frozen",
            "type": "bool"
          },
          {
            "internalType": "address",
            "name": "attributionAddress",
            "type": "address"
          }
        ],
        "internalType": "struct LibStakingStorage.StakeRecord[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "recordId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "userStakerAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "rewardEpochNumber",
        "type": "uint256"
      }
    ],
    "name": "getStakeWeightInEpoch",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "unfreezeStart",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeLock",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastUpdateTimestamp",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimed",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "initialSharePrice",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "loaded",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "frozen",
            "type": "bool"
          },
          {
            "internalType": "address",
            "name": "attributionAddress",
            "type": "address"
          }
        ],
        "internalType": "struct LibStakingStorage.StakeRecord",
        "name": "stakeRecord",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "rewardEpochNumber",
        "type": "uint256"
      }
    ],
    "name": "getTimelockInEpoch",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getTokenContractAddress",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getTokenPrice",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "unfreezeStart",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeLock",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastUpdateTimestamp",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimed",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "initialSharePrice",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "loaded",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "frozen",
            "type": "bool"
          },
          {
            "internalType": "address",
            "name": "attributionAddress",
            "type": "address"
          }
        ],
        "internalType": "struct LibStakingStorage.StakeRecord",
        "name": "stakeRecord",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "rewardEpochNumber",
        "type": "uint256"
      }
    ],
    "name": "getTokensStaked",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "getTotalStake",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "getTotalStakeByUser",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "getValidatorsDelegated",
    "outputs": [
      {
        "internalType": "uint256[]",
        "name": "",
        "type": "uint256[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getValidatorsInCurrentEpoch",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getValidatorsInCurrentEpochLength",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getValidatorsInNextEpoch",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address[]",
        "name": "stakerAddresses",
        "type": "address[]"
      }
    ],
    "name": "getValidatorsStructs",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint32",
            "name": "ip",
            "type": "uint32"
          },
          {
            "internalType": "uint128",
            "name": "ipv6",
            "type": "uint128"
          },
          {
            "internalType": "uint32",
            "name": "port",
            "type": "uint32"
          },
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "reward",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "senderPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "receiverPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastActiveEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "commissionRate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRealmId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeWeight",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedFixedCostRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedCommission",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "operatorAddress",
            "type": "address"
          }
        ],
        "internalType": "struct LibStakingStorage.Validator[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getValidatorsStructsInCurrentEpoch",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint32",
            "name": "ip",
            "type": "uint32"
          },
          {
            "internalType": "uint128",
            "name": "ipv6",
            "type": "uint128"
          },
          {
            "internalType": "uint32",
            "name": "port",
            "type": "uint32"
          },
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "reward",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "senderPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "receiverPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastActiveEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "commissionRate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRealmId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeWeight",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedFixedCostRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedCommission",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "operatorAddress",
            "type": "address"
          }
        ],
        "internalType": "struct LibStakingStorage.Validator[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "getValidatorsStructsInNextEpoch",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint32",
            "name": "ip",
            "type": "uint32"
          },
          {
            "internalType": "uint128",
            "name": "ipv6",
            "type": "uint128"
          },
          {
            "internalType": "uint32",
            "name": "port",
            "type": "uint32"
          },
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "reward",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "senderPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "receiverPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastActiveEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "commissionRate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRealmId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeWeight",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedFixedCostRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedCommission",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "operatorAddress",
            "type": "address"
          }
        ],
        "internalType": "struct LibStakingStorage.Validator[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "epochNumber",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "validatorToBeKickedStakerAddress",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "voterStakerAddress",
        "type": "address"
      }
    ],
    "name": "getVotingStatusToKickValidator",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "globalConfig",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "tokenRewardPerTokenPerEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256[]",
            "name": "keyTypes",
            "type": "uint256[]"
          },
          {
            "internalType": "uint256",
            "name": "minimumValidatorCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "rewardEpochDuration",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxTimeLock",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minTimeLock",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "bmin",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "bmax",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "k",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "p",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "enableStakeAutolock",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "tokenPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "profitMultiplier",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "usdCostPerMonth",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxEmissionRate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minStakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxStakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minSelfStake",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minSelfStakeTimelock",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minValidatorCountToClampMinimumThreshold",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minThresholdToClampAt",
            "type": "uint256"
          }
        ],
        "internalType": "struct LibStakingStorage.GlobalConfig",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "isActiveShadowValidator",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "isActiveValidator",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "isActiveValidatorByNodeAddress",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "nodeAddress",
        "type": "address"
      }
    ],
    "name": "isActiveValidatorByNodeAddressForNextEpoch",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "isActiveValidatorForNextEpoch",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "isReadyForNextEpoch",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "stakerAddresses",
        "type": "address"
      }
    ],
    "name": "isRecentValidator",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "reason",
        "type": "uint256"
      }
    ],
    "name": "kickPenaltyPercentByReason",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "maxStake",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "maxTimeLock",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "minSelfStake",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "minStake",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "minTimeLock",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "nextValidatorCountForConsensus",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nodeAddress",
        "type": "address"
      }
    ],
    "name": "nodeAddressToStakerAddress",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "operatorAddress",
        "type": "address"
      }
    ],
    "name": "operatorAddressToStakerAddress",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "base",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "exponent",
        "type": "uint256"
      }
    ],
    "name": "pow",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "readyForNextEpoch",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "realmConfig",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "maxConcurrentRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxPresignCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minPresignCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "peerCheckingIntervalSecs",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxPresignConcurrency",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "rpcHealthcheckEnabled",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "minEpochForRewards",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "permittedValidatorsOn",
            "type": "bool"
          }
        ],
        "internalType": "struct LibStakingStorage.RealmConfig",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "shouldKickValidator",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      }
    ],
    "name": "state",
    "outputs": [
      {
        "internalType": "enum LibStakingStorage.States",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "realmId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      },
      {
        "internalType": "bool",
        "name": "stakerInCurrentValidatorSet",
        "type": "bool"
      }
    ],
    "name": "validatorSelfStakeWillExpire",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "stakerAddress",
        "type": "address"
      }
    ],
    "name": "validators",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint32",
            "name": "ip",
            "type": "uint32"
          },
          {
            "internalType": "uint128",
            "name": "ipv6",
            "type": "uint128"
          },
          {
            "internalType": "uint32",
            "name": "port",
            "type": "uint32"
          },
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "reward",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "senderPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "receiverPubKey",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastActiveEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "commissionRate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRealmId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delegatedStakeWeight",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedFixedCostRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastRewardEpochClaimedCommission",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "operatorAddress",
            "type": "address"
          }
        ],
        "internalType": "struct LibStakingStorage.Validator",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
]
